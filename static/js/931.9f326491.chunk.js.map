{"version":3,"file":"static/js/931.9f326491.chunk.js","mappings":"2LACA,EAAuB,yBAAvB,EAAuD,yB,SC8BvD,EA3BmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,eAAIJ,UAAWC,EAAf,UACE,SAAC,KAAD,CAASI,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMT,GAA7C,SACGM,KAFyBD,EAMjC,KAGN,C,kGCnBD,EAAyB,uBAAzB,EAA8D,4BAA9D,EAAsG,0B,SC6CtG,EA1Ce,SAAC,GAAyB,IAAvBK,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC1B,GAAoCC,EAAAA,EAAAA,UAASD,GAA7C,eAAOE,EAAP,KAAmBC,EAAnB,KAeMC,EAAQ,WACZD,EAAc,GACf,EAED,OACE,kBAAMZ,UAAWC,EAAYO,SAbV,SAAAM,GACnBA,EAAIC,iBAEJP,EAASG,GAETE,GACD,EAOC,WACE,kBACEb,UAAWC,EACXe,KAAK,OACLC,MAAON,EACPO,SAvBe,SAAAJ,GACnB,IAAQG,EAAUH,EAAIK,OAAdF,MACRL,EAAcK,EACf,EAqBKG,aAAa,MACbC,YAAY,kBAEd,mBAAQrB,UAAWC,EAAee,KAAK,SAAvC,sBAKL,E,iBCFD,EA/Be,WAAO,IAAD,IACnB,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAeyB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACjD,GAA0BjB,EAAAA,EAAAA,UAASgB,GAAnC,eAAOjB,EAAP,KAAcmB,EAAd,KACMC,EAAS,UAAGL,EAAaG,IAAI,gBAApB,QAAgC,IAC/CG,EAAAA,EAAAA,YAAU,WACHD,IAGLE,EAAAA,EAAAA,IAAeF,GACZG,MAAK,SAAAC,GACJX,EAAUW,EAAeC,QAC1B,IACAC,OAAM,SAAAC,GAAK,OAAIA,EAAMC,OAAV,IACXC,SAAQ,WAAQ,GACpB,GAAE,CAACT,IAOJ,OACE,iCACE,SAAC,EAAD,CAAQpB,MAAOA,EAAOD,SAPD,SAAAC,GACvBmB,EAASnB,GACTgB,EAA0B,KAAVhB,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAC7C,IAKIZ,EAAO0C,OAAS,IAAK,SAACC,EAAA,EAAD,CAAY3C,OAAQA,MAG/C,C","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx","pages/pages/Movie/Movie.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, title }) => {\n        return (\n          <li className={css.item} key={id}>\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </NavLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"Search_search__Wncrn\",\"searchInput\":\"Search_searchInput__Qk-44\",\"searchBtn\":\"Search_searchBtn__kEs6t\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Search.module.css';\n\nconst Search = ({ onSubmit, query }) => {\n  const [serchQuery, setSerchQuery] = useState(query);\n\n  const handleChange = evt => {\n    const { value } = evt.target;\n    setSerchQuery(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    onSubmit(serchQuery);\n\n    reset();\n  };\n\n  const reset = () => {\n    setSerchQuery('');\n  };\n\n  return (\n    <form className={css.search} onSubmit={handleSubmit}>\n      <input\n        className={css.searchInput}\n        type=\"text\"\n        value={serchQuery}\n        onChange={handleChange}\n        autoComplete=\"off\"\n        placeholder=\"Search movie\"\n      ></input>\n      <button className={css.searchBtn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default Search;\n","import { getSearchMovie } from 'services/movieKeyAPI';\nimport { useState, useEffect } from 'react';\nimport Search from 'components/Search';\nimport MoviesList from 'components/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const [query, setQuery] = useState(searchQuery);\n  const movieName = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    getSearchMovie(movieName)\n      .then(responseMovies => {\n        setMovies(responseMovies.results);\n      })\n      .catch(error => error.message)\n      .finally(() => {});\n  }, [movieName]);\n\n  const handleFormSubmit = query => {\n    setQuery(query);\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <>\n      <Search query={query} onSubmit={handleFormSubmit} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["movies","location","useLocation","className","css","map","id","title","to","state","from","onSubmit","query","useState","serchQuery","setSerchQuery","reset","evt","preventDefault","type","value","onChange","target","autoComplete","placeholder","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","setQuery","movieName","useEffect","getSearchMovie","then","responseMovies","results","catch","error","message","finally","length","MoviesList"],"sourceRoot":""}